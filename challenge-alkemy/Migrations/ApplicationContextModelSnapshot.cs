// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using challenge_alkemy.Context;

namespace challenge_alkemy.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.Property<int>("PeliculaSeriesId_PeliculaSerie")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesId_Personaje")
                        .HasColumnType("int");

                    b.HasKey("PeliculaSeriesId_PeliculaSerie", "PersonajesId_Personaje");

                    b.HasIndex("PersonajesId_Personaje");

                    b.ToTable("PeliculaSeriePersonaje");
                });

            modelBuilder.Entity("challenge_alkemy.Modelos.Genero", b =>
                {
                    b.Property<int>("Id_Genero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Genero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("challenge_alkemy.Modelos.PeliculaSerie", b =>
                {
                    b.Property<int>("Id_PeliculaSerie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_De_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeneroId_Genero")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_PeliculaSerie");

                    b.HasIndex("GeneroId_Genero");

                    b.ToTable("PeliculaSeries");
                });

            modelBuilder.Entity("challenge_alkemy.Modelos.Personaje", b =>
                {
                    b.Property<int>("Id_Personaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("Id_Personaje");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.HasOne("challenge_alkemy.Modelos.PeliculaSerie", null)
                        .WithMany()
                        .HasForeignKey("PeliculaSeriesId_PeliculaSerie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("challenge_alkemy.Modelos.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesId_Personaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("challenge_alkemy.Modelos.PeliculaSerie", b =>
                {
                    b.HasOne("challenge_alkemy.Modelos.Genero", null)
                        .WithMany("PeliculaSeries")
                        .HasForeignKey("GeneroId_Genero");
                });

            modelBuilder.Entity("challenge_alkemy.Modelos.Genero", b =>
                {
                    b.Navigation("PeliculaSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
